name: Auto increment version and merge PR

on:
  issue_comment:
    types: [created]

jobs:
  bump-and-merge:
    if: github.event.comment.body == '/merge'
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: maven
      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Fetch PR
        run: gh pr checkout ${{ github.event.issue.number }}
      - name: Detect version bump
        id: bump
        run: |
          # Get last commit message
          LAST_MSG=$(git log -1 --pretty=%B)
          echo "Last commit: $LAST_MSG"

          # Default bump = patch
          BUMP="patch"

          if echo "$LAST_MSG" | grep -q "BREAKING CHANGE"; then
            BUMP="major"
          elif echo "$LAST_MSG" | grep -q "^feat"; then
            BUMP="minor"
          elif echo "$LAST_MSG" | grep -q "^fix"; then
            BUMP="patch"
          fi

          echo "Bump type: $BUMP"

          # Read current version
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $CURRENT_VERSION"

          case "$BUMP" in
            major) NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$1+=1;$2=0;$3=0;print}') ;;
            minor) NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$2+=1;$3=0;print}') ;;
            patch) NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$3+=1;print}') ;;
          esac

          echo "Version bump ($CURRENT_VERSION) -> ($NEW_VERSION)"

          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
      - name: Bump version in pom.xml
        run: |
          mvn --batch-mode versions:set -DnewVersion=$NEW_VERSION
          mvn --batch-mode versions:commit
      - name: Push Version Bump
        run: git push origin HEAD
      - name: Merge PR
        run: gh pr merge ${{ github.event.inputs.pr_number }} --merge --auto
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}